Quartz是OpenSymphony开源组织在Job scheduling领域又一个开源项目，它可以与J2EE与J2SE应用程序相结合也可以单独使用。Quartz可以用来创建简单或为运行十个，百个，甚至是好几万个Jobs这样复杂的程序。Jobs可以做成标准的Java组件或 EJBs。

Quartz的优势：
1、Quartz是一个任务调度框架(库)，它几乎可以集成到任何应用系统中。
2、Quartz是非常灵活的，它让您能够以最“自然”的方式来编写您的项目的代码，实现您所期望的行为
3、Quartz是非常轻量级的，只需要非常少的配置 ―― 它实际上可以被跳出框架来使用，如果你的需求是一些相对基本的简单的需求的话。
4、Quartz具有容错机制，并且可以在重启服务的时候持久化（”记忆”）你的定时任务，你的任务也不会丢失。
5、可以通过Quartz，封装成自己的分布式任务调度，实现强大的功能，成为自己的产品
6、有很多的互联网公司也都在使用Quartz。

课程说明：
在我们的日常开发中，各种大型系统的开发少不了任务调度，简单的单机任务调度已经满足不了我们的系统需求，复杂的任务会让程序猿头疼， 所以急需一套专门的框架帮助我们去管理定时任务，并且可以在多台机器去执行我们的任务，还要可以管理我们的分布式定时任务。

本课程从最开始的quatz框架讲起，由浅到深，从使用到结构分析，再到源码分析，深入解析quatz、spring+quatz，并且会讲解相关原理， 让大家充分的理解这个框架和框架的设计思想。由于互联网的复杂性，为了满足我们特定的需求，需要对spring+quatz进行二次开发，整个二次开发过程都会讲解。 

学完这个课程后，不仅仅可以熟练掌握分布式定时任务，还可以深入理解大型框架的设计思想。 

课程大纲：
1、分布式任务调度需求说明
2、分布式任务调度之quartz初体验
3、分布式任务调度Trigger之simpleTrigger
4、分布式任务调度Trigger之DailyTimetrigger和calendartrigger
5、分布式任务调度Trigger之crontrigger
6、分布式任务调度job和jobdetail讲解
7、分布式任务调度Schduler讲解
8、分布式任务调度quartz源码解析之建造者模式
9、分布式任务调度quartz源码解析之scheduler源码解析
10、分布式任务调度quartz源码解析之scheduler源码分析总结
11、分布式任务调度之触发器、调度器建造者源码分析 
12、分布式任务调度之触发器建造者、各类调度器建造者源码分析 
13、分布式任务调度之job源码分析 
14、分布式任务调度之JobRunShell源码分析 
15、分布式任务调度之spring+quartz整合 
16、分布式任务调度之spring+quartz源码解析之事件驱动模型原理讲解 
17、分布式任务调度之spring+quartz源码解析之事件驱动模型代码讲解 
18、分布式任务调度之spring+quartz源码解析之生命周期机制混合使用讲解
19、分布式任务调度之spring+quartz源码解析之生命周期机制混合使用代码讲解 
20、分布式任务调度之Spring+quatz源码深度剖析 
21、分布式任务调度之Spring+quatz源码解析总结 
22、分布式任务调度之二次开发需求讲解 
23、分布式任务调度之二次开发代码编写1 
24、分布式任务调度之二次开发代码编写2 
25、分布式任务调度之二次开发代码编写3 


